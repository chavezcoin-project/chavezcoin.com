window.SectionMessageMid = React.createClass({
  render: function() {
    var self = this;
    var messagesIndividual = [];
    var option = this.props.option;
    switch (option) {
      case 'app':
        $.each(self.props.translations.text, function(key, text) {
          messagesIndividual.push(<p key="text" className="tag-text -left-center -white" key={'app-text-' + control} >{text}</p>);
          control++;
        });
        break;
      case 'side':
        messagesIndividual.push(<p key="text" className="tag-text -left-center">{this.props.translations.text}</p>);
        break;
      default:
        if (self.props.translations.benefits) {
          var benefits = [];
          var control = 0;
          messagesIndividual.push(<p className="tag-text -white _marginbottom-md -left" key={'first-text'} >{self.props.translations.first_step}</p>);
          $.each(self.props.translations.benefits, function(key, benefit) {
            benefits.push(
              <li className="pure-u-1 pure-u-lg-5-12 item" key={key + control} >
                <i className="fa fa-check-circle"></i>
                <p className="tag-text -white -left" >{benefit}</p>
              </li>
            );
            control++;
          });
          messagesIndividual.push(<ul className="pure-u-1 icon-bullet-list" key={control} >{benefits}</ul>);
          messagesIndividual.push(<p className="tag-text -white _marginbottom-md -left" key={'text-end'} >{self.props.translations.end_text}</p>);
        }else {
          $.each(self.props.translations.text, function(key, text) {
            messagesIndividual.push(<p className="tag-text -white _marginbottom-md -left" key={key} >{text}</p>);
          });
        }
        break;
    }
    switch (option) {
      case 'app':
        return(
          <div className="pure-u-1 pure-u-lg-1-3 content">
            <h3 className="pure-u-1 main-title -left -bold _marginbottom-md -left-center -fullwidth">{this.props.translations.title}</h3>
            {messagesIndividual}
          </div>
        )
        break;
      case 'side':
        return(
          <div className="pure-u-1 pure-u-lg-1-3 content">
            <h3 className="pure-u-1 main-title -left -bold _marginbottom-md -left-center -fullwidth -black">{this.props.translations.title}</h3>
            {messagesIndividual}
          </div>
        )
        break;
      default:
        return(
          <div className="menssage-container">
            <h3 className="main-title -midsize -left guide-expand">
              <i className="cross">+</i>
              <span className="title">{this.props.translations.title}</span>
            </h3>
            {messagesIndividual}
          </div>
        )
        break;
    }
  }
})

window.DualSectionMessage = React.createClass({
  render: function() {
    return(
      <div className="menssage-container">
        <h3 className="main-title -bold -black _marginbottom-md -fullwidth">{this.props.title}</h3>
        <p className="tag-text -center -black">{this.props.message}</p>
        <p className="tag-text -center -black _marginbottom-md">{this.props.message_two}</p>
      </div>
    )
  }
})

window.SectionMessage = React.createClass({
  render: function() {
    return(
      <div className="menssage-container">
        <h3 className="main-title -bold -black _marginbottom-md -fullwidth">{this.props.title}</h3>
        <p className="tag-text -center -black _marginbottom-md">{this.props.message}</p>
      </div>
    )
  }
})

window.SectionMessageWhite = React.createClass({
  render: function() {
    return(
      <div className="menssage-container">
        <h3 className="main-title -bold _marginbottom-md -fullwidth">{this.props.title}</h3>
        <p className="tag-text -center -white _marginbottom-md">{this.props.message}</p>
      </div>
    )
  }
})

window.SectionMessageWhiteDual = React.createClass({
  render: function() {
    return(
      <div className="menssage-container">
        <h3 className="main-title -bold _marginbottom-md -fullwidth">{this.props.title}</h3>
        <p className="tag-text -center -white">{this.props.message}</p>
        <p className="tag-text -center -white _marginbottom-md">{this.props.message_two}</p>
      </div>
    )
  }
})